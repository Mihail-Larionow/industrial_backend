// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/execute": {
            "post": {
                "description": "Принимает список инструкций для выполнения арифметических операций и вывода результатов",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Instructions"
                ],
                "summary": "Выполнение инструкций",
                "parameters": [
                    {
                        "description": "Список инструкций для выполнения",
                        "name": "instructions",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/service.Instruction"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Успешное выполнение инструкций",
                        "schema": {
                            "$ref": "#/definitions/service.Response"
                        }
                    },
                    "400": {
                        "description": "Неверный формат запроса",
                        "schema": {
                            "$ref": "#/definitions/service.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "service.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Неверный формат запроса"
                }
            }
        },
        "service.Instruction": {
            "type": "object",
            "properties": {
                "left": {
                    "type": "integer",
                    "example": 1
                },
                "op": {
                    "type": "string",
                    "example": "+"
                },
                "right": {
                    "type": "integer",
                    "example": 2
                },
                "type": {
                    "type": "string",
                    "example": "calc"
                },
                "var": {
                    "type": "string",
                    "example": "x"
                }
            }
        },
        "service.Response": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/service.ResponseItem"
                    }
                }
            }
        },
        "service.ResponseItem": {
            "type": "object",
            "properties": {
                "value": {
                    "type": "integer",
                    "example": 3
                },
                "var": {
                    "type": "string",
                    "example": "x"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Вычислятор",
	Description:      "Сервис-калькулятор",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
